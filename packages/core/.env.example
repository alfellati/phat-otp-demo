OTP_API_KEY=

POLYGON_RPC_URL=
MUMBAI_RPC_URL=
DEPLOYER_PRIVATE_KEY=
POLYGONSCAN_API_KEY=

# More info can be found in the `README.md`. For Polgon mainnet deployments of the LensAPI Oracle at https://bricks.phala.network,
# set the `POLYGON_LENSAPI_ORACLE_ENDPOINT`.
# For Polygon Mumbai testnet deployments of the LensAPI Oracle at https://bricks-poc5.phala.network set the `MUMBAI_LENSAPI_ORACLE_ENDPOINT`.
POLYGON_LENSAPI_ORACLE_ENDPOINT=0x0e9e628d715003ff5045fc92002c67ddab364683
MUMBAI_LENSAPI_ORACLE_ENDPOINT=0xa31cb575847033341a1af63ac86fee33818a4838

# After executing the `npx hardhat deploy --network <network>`, the deployed consumer contract address will be returned
# that address should be set to `POLYGON_CONSUMER_CONTRACT_ADDRESS` for Polygon mainnet deployment and `MUMBAI_CONSUMER_CONTRACT_ADDRESS`
# for Polygon Mumbai testnet deployment
POLYGON_CONSUMER_CONTRACT_ADDRESS=
MUMBAI_CONSUMER_CONTRACT_ADDRESS=

# The encypt passphrase for the exported polkadot wallet JSON file.
# If you import your polkadot-account.json file then define POLKADOT_WALLET_PASSPHRASE
# Else define POLKADOT_WALLET_SURI (ex. POLKADOT_WALLET_SURI=//ALICE or POLKADOT_WALLET_SURI="this is a mnemonic phrase")
POLKADOT_WALLET_PASSPHRASE=
POLKADOT_WALLET_SURI=

# When calling the yarn update-function, ensure that you set the WORKFLOW_ID to the Phat Contract function workflow you want to update.
WORKFLOW_ID=

PHAT_BRICKS_TESTNET_CONTRACT_ID=
